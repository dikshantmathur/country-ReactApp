{"version":3,"sources":["assets/react-logo.png","components/header/header.jsx","components/navigation/nav.jsx","components/footer/footer.jsx","components/dashboard/dashboard.jsx","components/countries/countries.jsx","components/allcountries/allcountries.jsx","components/regions/regions.jsx","components/countrydetail/countrydetail.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","Logo","Component","Nav","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Footer","Dashboard","Countries","state","pageNumber","pagination","count","countries","visCountries","getNext","start","end","setState","slice","getPrev","axios","get","then","response","data","this","map","country","key","alpha2Code","name","flag","capital","region","population","area","onClick","href","aria-disabled","AllCountries","length","componentDidMount","match","props","path","params","reg","sortData","event","sortParam","target","value","sortCountries","sort","a","b","filterCountries","keyw","filterText","toLowerCase","filterCountryList","filter","indexOf","onChange","ref","node","Regions","regions","getUniqeValues","filtered","el","arr","prop","e","i","regSrc","alt","CountryDetail","countryDetail","otherCountries","currency","console","log","altSpellings","res","currencies","Object","values","subregion","callingCodes","demonym","numericCode","timezones","App","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4548419a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-logo.14c89a41.png\";","import React, { Component } from 'react';\nimport './header.css';\nimport Logo from '../../assets/react-logo.png';\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"fluid-container header\">\n                <section className=\"jumbotron bg-primary text-white text-left\">\n                    <div className=\"mastHead container\">\n                        <div className=\" row\">\n                            <div className=\"col-sm-2\"><img src={Logo} className=\"logo\" /></div>\n                            <div className=\"col-sm-10 d-none d-sm-block\">\n                                <h1 className=\"jumbotron-heading\">Country Details</h1>\n                                <p className=\"lead\">React App</p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport './nav.css';\n\nimport { Link } from 'react-router-dom'\n\nexport default class Nav extends Component {\n    render() {\n        return (\n            <div className=\"navbar navbar-dark navbar-expand-lg bg-dark\">\n                <div className=\"container\">\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n                        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/dash\">Dashboard</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport './footer.css';\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <footer className=\"footer alert-primary\">\n                <div className=\"container \">\n                    <p className=\"fofo text-center\">React App made by Dikshant Mathur</p>\n                </div>\n            </footer>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport './dashboard.css';\nimport { NavLink } from 'react-router-dom';\n\nexport default class Dashboard extends Component {\n    render() {\n        return (\n            <div className=\"row d-flex justify-content-center\">\n                <div className=\"col-lg-8 alert-primary alert row dashBoradContainer\">\n                    <div className=\"col-sm-6 text-right\">\n                        <h5>Search by:</h5>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <div><NavLink to={`/${'all'}`}>All Countries</NavLink></div>\n                        <div><NavLink to=\"/countries\">All Countries using pagination</NavLink></div>\n                        <div><NavLink to=\"/region\">All Regions</NavLink></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport './countries.css';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\n\n\nexport default class Countries extends Component {\n    state = {\n        pageNumber: 0,\n        pagination: 4,\n        count: 0,\n        countries: [],\n        visCountries: []\n    };\n\n    componentDidMount() {\n        axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n            this.setState({\n                countries: response.data,\n                visCountries: response.data.slice(this.state.count, this.state.pagination)\n            });\n        });\n    }\n\n    getNext = () => {\n        this.state.pageNumber++;\n        const start = this.state.count, end = start + this.state.pagination;\n        this.setState({\n            visCountries: this.state.countries.slice(start, end)\n        });\n    };\n\n    getPrev = () => {\n        this.state.pageNumber--;\n        const start = this.state.count, end = start + this.state.pagination;\n        this.setState({\n            visCountries: this.state.countries.slice(end, start)\n        });\n    };\n\n    render() {\n        return (\n            <section>\n                <div className=\"row countryList\">\n                    {this.state.visCountries.map(country => {\n                        count: this.state.count++\n                        return (\n                            <div className=\"col-md-6\" key={country.alpha2Code}>\n                                <div className=\"card\">\n                                    <h5 className=\"card-header text-danger alert-warning\">{this.state.count}: {country.name}</h5>\n                                    <div className=\"card-body row\">\n                                        <div className=\"col-md-6 text-center\"><img className=\"imgCountry\" src={country.flag} /></div>\n                                        <div className=\"col-md-6 desc\">\n                                            <p><b>Capital: </b> {country.capital}</p>\n                                            <p><b>Region:</b> {country.region}</p>\n                                            <p><b>Population: </b> {country.population}</p>\n                                            <p><b>Area: </b> {country.area}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"card-footer\">\n                                        <NavLink className=\"btn-link text-danger\" to={`/country/${country.alpha2Code}`}>Click to Country Detail</NavLink>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n                <nav aria-label=\"Page navigation example\">\n                    <ul className=\"pagination justify-content-center\">\n                        <li className=\"page-item active\"><a onClick={this.getPrev} className=\"page-link\">Previous {this.state.pagination} countries</a></li>\n                        <li className=\"page-item disabled\"><a className=\"page-link disabled\" href=\"#\" aria-disabled=\"true\">1</a></li>\n                        <li className=\"page-item disabled\"><a className=\"page-link disabled\" href=\"#\" aria-disabled=\"true\">2</a></li>\n                        <li className=\"page-item disabled\"><a className=\"page-link disabled\" href=\"#\" aria-disabled=\"true\">3</a></li>\n                        <li className=\"page-item active\"> <a onClick={this.getNext} className=\"page-link\">Next {this.state.pagination} countries</a></li>\n                    </ul>\n                </nav>\n            </section>\n        );\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport './allcountries.css';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\n\nexport default class AllCountries extends Component {\n    state = {\n        count: 0,\n        countries: [],\n        visCountries: [],\n        length:0\n    };\n\n    componentDidMount = () => {\n        const { match } = this.props;\n        const path = (match.params.reg !== 'all') ? `https://restcountries.eu/rest/v2/region/${match.params.reg}`: 'https://restcountries.eu/rest/v2/all';\n        axios.get(path).then(response => {\n            this.setState({\n                countries: response.data,\n                visCountries: response.data,\n                length:response.data.length\n            });\n        });\n    }\n\n    sortData = (event) => {\n        const sortParam = event.target.value;\n        const sortCountries = this.state.countries.sort((a, b) => {\n            return b[sortParam] - a[sortParam]\n        });\n        this.setState({\n            count: 0,\n            visCountries: sortCountries,\n            length:sortCountries.length\n        });\n    }\n\n    filterCountries = () => {\n        let keyw = this.filterText.value.toLowerCase();\n        const filterCountryList = this.state.countries.filter(country => {\n            let cArr = country.name.toLowerCase();\n            return cArr.indexOf(keyw) !== -1;\n        });\n        this.setState({\n            count: 0,\n            visCountries: filterCountryList,\n            length:filterCountryList.length\n        });\n    };\n\n    render() {\n        return (\n            <section className=\"allCountryList\">\n                <h2 className=\"text-primary\">All Countries <span className=\"badge badge-secondary\">{this.state.length}</span></h2>\n                <nav className=\"navbar filterRow text-white bg-success my-4\">\n                    <div className=\"col-md-7\">\n                        <label className=\"text-right col-md-5\">Search by Country Name: </label>\n                        <input type=\"text\" onChange={this.filterCountries} ref={node => (this.filterText = node)} className=\"col-md-7 searchBox\" />\n                    </div>\n                    <div className=\"col-md-4\">\n                        <label className=\"col-md-4 text-right\">Sort by: </label>\n                        <select onChange={this.sortData} className=\"col-md-8 sortDD\">\n                            <option value=\"country\">Country Name</option>\n                            <option value=\"population\">Population</option>\n                            <option value=\"area\">Area</option>\n                        </select>\n                    </div>\n                </nav>\n\n                <div className=\"row copyArea\">\n                    {this.state.visCountries.map(country => {\n                        count: this.state.count++\n                        return (\n                            <div className=\"col-md-4\" key={country.alpha2Code}>\n                                <div className=\"card\">\n                                    <h5 className=\"card-header alert-success text-info\">{this.state.count}: {country.name}</h5>\n                                    <div className=\"card-body row\">\n                                        <div className=\"col-md-5 text-center\"><img className=\"imgCountry\" src={country.flag} /></div>\n                                        <div className=\"col-md-7 desc\">\n                                            <p><b>Capital: </b> {country.capital}</p>\n                                            <p><b>Region:</b> {country.region}</p>\n                                            <p><b>Population: </b> {country.population}</p>\n                                            <p><b>Area: </b> {country.area}</p>\n                                            <p><b>Alpha Code: </b> {country.alpha2Code}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"card-footer text-right\">\n                                        <NavLink to={`/country/${country.alpha2Code}`} className=\"text-info\">Country Detail</NavLink>\n                                    </div>\n\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </section>\n        );\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport './regions.css';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom'\n\nexport default class Regions extends Component {\n    state = {\n        count: 0,\n        countries: [],\n        regions: []\n    };\n\ncomponentDidMount = () => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\").then(response => {\n        this.state.countries = response.data;\n        this.state.regions = getUniqeValues(this.state.countries, 'region');\n        const filtered = this.state.regions.filter(function (el) {\n            return el != '';\n        });\n        this.setState({\n            regions: filtered\n        });\n    });\n\n    const getUniqeValues = (arr, prop) => {\n        return arr.map(function (e) { return e[prop]; }).filter(function (e, i, a) {\n            return i === a.indexOf(e);\n        });\n    }\n\n    }\n\n    render() {\n        return (\n            <section className=\"regionList\">\n                <div className=\"row copyArea\">\n                    {this.state.regions.map(reg => {\n                        const regSrc= 'https://via.placeholder.com/300x150.png/17a2b8/fff?text='+reg;\n                        count: this.state.count++\n                        return (\n                            <div className=\"col-sm-4\" key={reg}>\n                                <div className=\"card mb-4\">\n                                    <img src={regSrc} className=\"card-img-top\" alt={reg} />\n                                    <div className=\"card-body\">\n                                        <p className=\"card-text\">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n                                         <NavLink to={reg}>{reg}</NavLink>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </section>\n        );\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport './countrydetail.css';\nimport axios from 'axios';\n\nexport default class CountryDetail extends Component {\n    state = {\n        countryDetail: [],\n        otherCountries: [],\n        currency: []\n    };\n\n    componentDidMount() {\n        const { match } = this.props;\n        console.log(match.params.alpha2Code)\n        const path = `https://restcountries.eu/rest/v2/alpha/${match.params.alpha2Code}`;\n        axios.get(path).then(response => {\n            this.setState({\n                countryDetail: response.data,\n                otherCountries: response.data.altSpellings.map((res)=>{\n                    return res+', '\n                 }),\n                 currency: response.data.currencies.map((res)=>{\n                     return Object.values(res)+', ';\n                 }),\n            });\n        });\n     }\n\n    render() {\n        return (\n            <section>\n                \n                <div className=\"countryDetail\">\n                    <div className=\"row\">\n                      <div className=\"col-md-4\">\n                        <img src={this.state.countryDetail.flag} className=\"img-fluid\" alt=\"...\" />\n                      </div>\n                      <div className=\"col-md-8\">\n                        <h5 className=\"mt-0\">About {this.state.countryDetail.name}</h5>\n                        <p>Lorem ipsum is the nonsense filler text that typically demonstrates the font and style of a text in a document or visual demonstration. Originally from Latin, lorem ipsum has no intelligible meaning, but is simply a display of letters and characteristics to be viewed as a sample with given graphical elements in a file. Lipsum (portmanteau of lorem and ipsum) generators are commonly used to form generic text in a file. The “gibberish” is adequately like normal text to demonstrate a font, but does not distract the reader with its content. It has been used as placeholder text since the 16th century.</p>\n                        <ul>\n                            <li>Capital: <b>{this.state.countryDetail.capital}</b></li>\n                            <li>Region: <b>{this.state.countryDetail.region}</b></li>\n                            <li>Sub-region: <b>{this.state.countryDetail.subregion}</b></li>\n                            <li>Calling Code: <b>{this.state.countryDetail.callingCodes}</b></li>\n                            <li>Other Name: <b>{this.state.otherCountries}</b></li>\n                            <li>Currency: <b>{this.state.currency}</b></li>\n                            <li>Population: <b>{this.state.countryDetail.population}</b></li>\n                            <li>Demonym: <b>{this.state.countryDetail.demonym}</b></li>\n                            <li>Area: <b>{this.state.countryDetail.area}</b></li>\n                            <li>Code: <b>{this.state.countryDetail.numericCode}</b></li>\n                            <li>Timezone: <b>{this.state.countryDetail.timezones}</b></li>\n                        </ul>\n                        <p>Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.</p>\n                      </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/header/header.jsx';\nimport Nav from './components/navigation/nav.jsx';\nimport Footer from './components/footer/footer.jsx';\nimport Dashboard from './components/dashboard/dashboard.jsx';\nimport Countries from './components/countries/countries.jsx';\nimport AllCountries from './components/allcountries/allcountries.jsx';\nimport Regions from './components/regions/regions.jsx';\nimport CountryDetail from './components/countrydetail/countrydetail.jsx';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"fluid-container\">\n        <Header />\n        <Router>\n          <div>\n            <Nav />\n            <div className=\"copyArea container\">\n            <Switch>\n             <Route exact path=\"/\" component={Dashboard} />\n                <Route path=\"/dash\" component={Dashboard} />\n                <Route path=\"/countries\" component={Countries} />\n                <Route path=\"/region\" component={Regions} />\n                <Route path=\"/country/:alpha2Code\" component={CountryDetail} />\n                <Route path=\"/:reg\" component={AllCountries} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}